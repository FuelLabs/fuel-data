// This file is @generated by prost-build.
/// Shared types
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bytes32Proto {
    #[prost(bytes = "vec", tag = "1")]
    pub value: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BlockIdProto {
    #[prost(bytes = "vec", tag = "1")]
    pub value: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SignatureProto {
    #[prost(bytes = "vec", tag = "1")]
    pub value: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Tai64TimestampProto {
    /// Represents a timestamp
    #[prost(uint64, tag = "1")]
    pub value: u64,
}
/// BlockHeader
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BlockHeaderProto {
    #[prost(message, optional, tag = "1")]
    pub application_hash: ::core::option::Option<Bytes32Proto>,
    #[prost(uint32, tag = "2")]
    pub consensus_parameters_version: u32,
    #[prost(uint64, tag = "3")]
    pub da_height: u64,
    #[prost(message, optional, tag = "4")]
    pub event_inbox_root: ::core::option::Option<Bytes32Proto>,
    #[prost(message, optional, tag = "5")]
    pub id: ::core::option::Option<BlockIdProto>,
    #[prost(uint32, tag = "6")]
    pub height: u32,
    #[prost(message, optional, tag = "7")]
    pub message_outbox_root: ::core::option::Option<Bytes32Proto>,
    #[prost(uint32, tag = "8")]
    pub message_receipt_count: u32,
    #[prost(message, optional, tag = "9")]
    pub prev_root: ::core::option::Option<Bytes32Proto>,
    #[prost(uint32, tag = "10")]
    pub state_transition_bytecode_version: u32,
    #[prost(message, optional, tag = "11")]
    pub time: ::core::option::Option<Tai64TimestampProto>,
    #[prost(uint32, tag = "12")]
    pub transactions_count: u32,
    #[prost(message, optional, tag = "13")]
    pub transactions_root: ::core::option::Option<Bytes32Proto>,
    #[prost(enumeration = "BlockHeaderVersionProto", tag = "14")]
    pub version: i32,
}
/// Consensus Types
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ConsensusProto {
    #[prost(oneof = "consensus_proto::ConsensusType", tags = "1, 2")]
    pub consensus_type: ::core::option::Option<consensus_proto::ConsensusType>,
}
/// Nested message and enum types in `ConsensusProto`.
pub mod consensus_proto {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum ConsensusType {
        #[prost(message, tag = "1")]
        Genesis(super::GenesisProto),
        #[prost(message, tag = "2")]
        PoaConsensus(super::PoAConsensusProto),
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GenesisProto {
    #[prost(message, optional, tag = "1")]
    pub chain_config_hash: ::core::option::Option<Bytes32Proto>,
    #[prost(message, optional, tag = "2")]
    pub coins_root: ::core::option::Option<Bytes32Proto>,
    #[prost(message, optional, tag = "3")]
    pub contracts_root: ::core::option::Option<Bytes32Proto>,
    #[prost(message, optional, tag = "4")]
    pub messages_root: ::core::option::Option<Bytes32Proto>,
    #[prost(message, optional, tag = "5")]
    pub transactions_root: ::core::option::Option<Bytes32Proto>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PoAConsensusProto {
    #[prost(message, optional, tag = "1")]
    pub signature: ::core::option::Option<SignatureProto>,
}
/// Block
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BlockProto {
    #[prost(message, optional, tag = "1")]
    pub consensus: ::core::option::Option<ConsensusProto>,
    #[prost(message, optional, tag = "2")]
    pub header: ::core::option::Option<BlockHeaderProto>,
    #[prost(uint32, tag = "3")]
    pub height: u32,
    #[prost(message, optional, tag = "4")]
    pub id: ::core::option::Option<BlockIdProto>,
    #[prost(message, repeated, tag = "5")]
    pub transaction_ids: ::prost::alloc::vec::Vec<Bytes32Proto>,
    #[prost(enumeration = "BlockVersionProto", tag = "6")]
    pub version: i32,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum BlockHeaderVersionProto {
    BlockHeaderVersionV1 = 0,
}
impl BlockHeaderVersionProto {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::BlockHeaderVersionV1 => "BLOCK_HEADER_VERSION_V1",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BLOCK_HEADER_VERSION_V1" => Some(Self::BlockHeaderVersionV1),
            _ => None,
        }
    }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum BlockVersionProto {
    BlockVersionV1 = 0,
}
impl BlockVersionProto {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::BlockVersionV1 => "BLOCK_VERSION_V1",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "BLOCK_VERSION_V1" => Some(Self::BlockVersionV1),
            _ => None,
        }
    }
}
